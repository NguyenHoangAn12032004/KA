version: '3.8'

services:
  # Redis Cache Service
  redis:
    image: redis:7-alpine
    container_name: recruitment_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - recruitment_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: recruitment_postgres
    environment:
      POSTGRES_DB: recruitment_platform
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - recruitment_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API (Enhanced)
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: recruitment_backend
    environment:
      DATABASE_URL: "postgresql://postgres:postgres123@postgres:5432/recruitment_platform"
      REDIS_HOST: "redis"
      REDIS_PORT: "6379"
      JWT_SECRET: "development-jwt-secret-key"
      JWT_EXPIRES_IN: "7d"
      NODE_ENV: "development"
      PORT: "5000"
      CORS_ORIGIN: "http://localhost:3000"
      LOG_LEVEL: "info"
      ENABLE_AI_FEATURES: "true"
      ENABLE_CACHING: "true"
      ENABLE_REAL_TIME: "true"
      GEMINI_API_KEY: "${GEMINI_API_KEY:-}"
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./backend/logs:/app/logs
      - ./backend/uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - recruitment_network
    command: npm run dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React App (PWA-Enhanced)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: recruitment_frontend
    environment:
      REACT_APP_API_URL: "http://localhost:5000/api"
      REACT_APP_SOCKET_URL: "http://localhost:5000"
      REACT_APP_AI_ENABLED: "true"
      REACT_APP_PWA_ENABLED: "true"
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - recruitment_network
    command: npm start
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:

networks:
  recruitment_network:
    driver: bridge
